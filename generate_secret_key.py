#!/usr/bin/env python3
"""
Script pour g√©n√©rer une nouvelle SECRET_KEY Django
"""

import secrets
import string

def generate_secret_key():
    """G√©n√®re une nouvelle SECRET_KEY Django"""
    
    # Caract√®res autoris√©s pour Django SECRET_KEY
    chars = string.ascii_letters + string.digits + '!@#$%^&*(-_=+)'
    
    # G√©n√©rer une cl√© de 50 caract√®res
    secret_key = ''.join(secrets.choice(chars) for _ in range(50))
    
    return secret_key

def main():
    """Fonction principale"""
    print("üîë G√©n√©rateur de SECRET_KEY Django")
    print("=" * 40)
    
    # G√©n√©rer la cl√©
    secret_key = generate_secret_key()
    
    print(f"\n‚úÖ Votre nouvelle SECRET_KEY :")
    print(f"SECRET_KEY='{secret_key}'")
    
    print(f"\nüìù Copiez cette ligne dans votre fichier .env :")
    print(f"SECRET_KEY={secret_key}")
    
    print(f"\n‚ö†Ô∏è  IMPORTANT :")
    print(f"- Gardez cette cl√© secr√®te")
    print(f"- Ne la partagez jamais")
    print(f"- Utilisez une cl√© diff√©rente pour chaque environnement")
    print(f"- En production, changez cette cl√© r√©guli√®rement")
    
    print(f"\nüîí Cette cl√© est utilis√©e pour :")
    print(f"- Signer les sessions utilisateur")
    print(f"- Crypter les tokens JWT")
    print(f"- S√©curiser les formulaires CSRF")
    print(f"- Hasher les mots de passe")
    
    return secret_key

if __name__ == "__main__":
    main() 